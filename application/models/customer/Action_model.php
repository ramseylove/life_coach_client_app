<?phpclass Action_model extends CI_Model{	function __construct()	{		parent::__construct();		$this->load->database();		$this->config->load('dbtables', TRUE);			}		function getActionTypeData()	{		$actionTypeQuery = $this->db->get($this->config->item('ala_action_types','dbtables'));		return $actionTypeQuery->result();	}		function getGoals()	{		$goalsQuery = $this->db->get_where($this->config->item('ala_goals','dbtables'), array("user_id"=>trim($this->session->userdata("user_id"))));		return $goalsQuery->result();	}		function getActions()	{		$actions = array();		$actionsDailyRoutineQuery = $this->db->get_where($this->config->item('ala_actions','dbtables'), array("user_id"=>trim($this->session->userdata("user_id")), 'action_type_id'=>2));		$actions['daily'] = $actionsDailyRoutineQuery->result();				$actionsOneTimeQuery = $this->db->get_where($this->config->item('ala_actions','dbtables'), array("user_id"=>trim($this->session->userdata("user_id")), 'action_type_id'=>1));		$actions['one_time'] = $actionsOneTimeQuery->result();				return $actions;	}		function getActionsCount()	{		$this->db->where('user_id', trim($this->session->userdata("user_id")));		return $this->db->count_all_results($this->config->item('ala_actions','dbtables'));	}		function insertCompleteAction($actionId)	{		for($i=0; $i<=2; $i++)		{			$insertDetailsArr[] = array(											'user_id' => trim($this->session->userdata("user_id")),											'action_id' => trim($actionId),											'feedback_node' => trim($this->input->post("action_complete_".$i."")),											'identifier' => "action_complete_".$i."",											'created_at' => date("Y-m-d H:i:s"),											'updated_at' => date("Y-m-d H:i:s"),										);		}		$res = $this->db->insert_batch($this->config->item('ala_action_user_notes','dbtables'), $insertDetailsArr);		return $res;	}		function updateActionAsComplete($actionId)	{		$data = array(							'is_finished' => 1,							'updated_at' => date("Y-m-d H:i:s"),						);		$this->db->where('id',$actionId);		$res = $this->db->update($this->config->item('ala_actions','dbtables'), $data);		return $res;	}		function insertAction()	{		$checkAction = $this->db->get_where($this->config->item('ala_actions','dbtables'),array("action_title"=>trim($this->input->post("title")), "user_id"=>trim($this->session->userdata("user_id"))));		if($checkAction->row())		{			return "exist";		}		else		{			$insertArr = array(								'user_id' => trim($this->session->userdata("user_id")),								'action_type_id' => trim($this->input->post("type")),								'action_title' => trim($this->input->post("title")),								'status' => 1,								'is_finished' => 0,								'created_at' => date("Y-m-d H:i:s"),								'updated_at' => date("Y-m-d H:i:s"),							  );			$result = $this->db->insert($this->config->item('ala_actions','dbtables'), $insertArr);			$actionId =  $this->db->insert_id();			if($actionId && $actionId > 0)			{				if($this->input->post('goals') && is_array($this->input->post('goals')) && count($this->input->post('goals'))>0)				{					$insertBulkActionArr = array();					foreach($this->input->post('goals') as $goal)					{						$insertActionArr = array();						$insertActionArr['user_id'] = trim($this->session->userdata("user_id"));						$insertActionArr['action_id'] = trim($actionId);						$insertActionArr['goal_id'] = trim($goal);						$insertBulkActionArr[] = $insertActionArr;					}										$this->db->insert_batch($this->config->item('ala_action_goal_mapping','dbtables'), $insertBulkActionArr); 				}				if($this->input->post('type') && trim($this->input->post('type'))==1)				{					$insertRemindersArr = array(										'action_id' => trim($actionId),										'date' => date('Y-m-d', strtotime(trim($this->input->post("remDate")))),										'time' => trim($this->input->post("remTime")).':00',										'status' => 1,										'created_at' => date("Y-m-d H:i:s"),										'updated_at' => date("Y-m-d H:i:s"),									  );									  					$this->db->insert($this->config->item('ala_action_reminders','dbtables'), $insertRemindersArr);				}				elseif($this->input->post('type') && trim($this->input->post('type'))==2)				{					$insertBulkRemArr = array();					$insertBulkRemArr[] = array(														'action_id' => trim($actionId),														'time' => trim($this->input->post("remTime")).':00',														'status' => 1,														'created_at' => date("Y-m-d H:i:s"),														'updated_at' => date("Y-m-d H:i:s"),												  );					for($i=1;$i<=trim($this->input->post("remTimeCounter"));$i++)					{						if($this->input->post("remTime_".$i))						{							$insertRemArr = array();							$insertRemArr['action_id'] = trim($actionId);							$insertRemArr['time'] = trim($this->input->post("remTime_".$i)).':00';							$insertRemArr['status'] = 1;							$insertRemArr['created_at'] = date("Y-m-d H:i:s");							$insertRemArr['updated_at'] = date("Y-m-d H:i:s");							$insertBulkRemArr[] = $insertRemArr;						}					}										$this->db->insert_batch($this->config->item('ala_action_reminders','dbtables'), $insertBulkRemArr); 				}				if($this->input->post("postMeetingId") && trim($this->input->post("postMeetingId"))!='')				{					$insertPmMappingArr = array(													'post_meeting_id'=>trim($this->input->post("postMeetingId")),													'action_id'=>$actionId,													'is_finished'=>0												);					$this->db->insert($this->config->item('ala_post_meeting_action_mapping','dbtables'), $insertPmMappingArr);				}			}			return $actionId;		}	}		function getActionData($actionId)	{		$this->db->where('id', trim($actionId));		$getActionQuery = $this->db->get($this->config->item('ala_actions','dbtables'));		$actionData = $getActionQuery->row();		if($actionData)		{			$actionData->goals = array();			$actionData->reminders = array();						$this->db->where('action_id', trim($actionId));			$getActionGoalsQuery = $this->db->get($this->config->item('ala_action_goal_mapping','dbtables'));			$actionGoalsData = $getActionGoalsQuery->result();			if($actionGoalsData)			{				$actionData->goals = $actionGoalsData;			}						$this->db->where('action_id', trim($actionId));			$getActionRemindersQuery = $this->db->get($this->config->item('ala_action_reminders','dbtables'));			$actionRemindersData = $getActionRemindersQuery->result();			if($actionRemindersData)			{				$actionData->reminders = $actionRemindersData;			}		}		return $actionData;	}	function updateAction($actionId)	{		$checkActionQuery = $this->db->get_where($this->config->item('ala_actions','dbtables'),array("action_title"=>trim($this->input->post("title")), "user_id"=>trim($this->session->userdata("user_id"))));		$checkAction = $checkActionQuery->row();				if($checkAction && $checkAction->id!=$actionId)		{			return "exist";		}		else		{			$data = array(							'action_type_id' => trim($this->input->post("type")),							'action_title' => trim($this->input->post("title")),							'updated_at' => date("Y-m-d H:i:s"),						);			$this->db->where('id',$actionId);			$res = $this->db->update($this->config->item('ala_actions','dbtables'), $data);			if($res)			{				$this->db->where('action_id', $actionId);				$this->db->delete($this->config->item('ala_action_goal_mapping','dbtables'));				if($this->input->post('goals') && is_array($this->input->post('goals')) && count($this->input->post('goals'))>0)				{					$insertBulkActionArr = array();					foreach($this->input->post('goals') as $goal)					{						$insertActionArr = array();						$insertActionArr['user_id'] = trim($this->session->userdata("user_id"));						$insertActionArr['action_id'] = trim($actionId);						$insertActionArr['goal_id'] = trim($goal);						$insertBulkActionArr[] = $insertActionArr;					}										$this->db->insert_batch($this->config->item('ala_action_goal_mapping','dbtables'), $insertBulkActionArr); 				}								$this->db->where('action_id', $actionId);				$this->db->delete($this->config->item('ala_action_reminders','dbtables'));				if($this->input->post('type') && trim($this->input->post('type'))==1)				{					$insertRemindersArr = array(										'action_id' => trim($actionId),										'date' => date('Y-m-d', strtotime(trim($this->input->post("remDate")))),										'time' => trim($this->input->post("remTime")).':00',										'status' => 1,										'created_at' => date("Y-m-d H:i:s"),										'updated_at' => date("Y-m-d H:i:s"),									  );									  					$this->db->insert($this->config->item('ala_action_reminders','dbtables'), $insertRemindersArr);				}				elseif($this->input->post('type') && trim($this->input->post('type'))==2)				{					$insertBulkRemArr = array();					$insertBulkRemArr[] = array(														'action_id' => trim($actionId),														'time' => trim($this->input->post("remTime")).':00',														'status' => 1,														'created_at' => date("Y-m-d H:i:s"),														'updated_at' => date("Y-m-d H:i:s"),												  );					for($i=1;$i<=trim($this->input->post("remTimeCounter"));$i++)					{						if($this->input->post("remTime_".$i))						{							$insertRemArr = array();							$insertRemArr['action_id'] = trim($actionId);							$insertRemArr['time'] = trim($this->input->post("remTime_".$i)).':00';							$insertRemArr['status'] = 1;							$insertRemArr['created_at'] = date("Y-m-d H:i:s");							$insertRemArr['updated_at'] = date("Y-m-d H:i:s");							$insertBulkRemArr[] = $insertRemArr;						}					}										$this->db->insert_batch($this->config->item('ala_action_reminders','dbtables'), $insertBulkRemArr); 				}			}			return $res;		}	}		function deleteAction($actionId)	{		$this->db->where('action_id', $actionId);		$this->db->delete($this->config->item('ala_action_goal_mapping','dbtables'));				$this->db->where('action_id', $actionId);		$this->db->delete($this->config->item('ala_action_reminders','dbtables'));						$this->db->where('id', $actionId);		$res = $this->db->delete($this->config->item('ala_actions','dbtables'));		return $res;	}	}?>
<?phpclass User_model extends CI_Model{	function __construct()	{		parent::__construct();		$this->load->database();		$this->config->load('dbtables', TRUE);			}		function getUsers($page)	{		$this->db->limit(ROWS_PER_PAGE, $page*ROWS_PER_PAGE);		$usersQuery = $this->db->get($this->config->item('su_users','dbtables'));		return $usersQuery->result();	}		function getSurveyPages()	{		$surveyPagesQuery = $this->db->get($this->config->item('su_survey_pages','dbtables'));		return $surveyPagesQuery->result();	}		function getUsersCount()	{		return $this->db->count_all_results($this->config->item('su_users','dbtables'));	}		function saveSurveyPagesForUser($userId)	{		$this->db->where('user_id', $userId);		$delSurveyPageRes = $this->db->delete($this->config->item('su_user_survey_page_map','dbtables')); 				$dataArr = array();		$surveyPagesArr = $this->input->post('surveyPages');		foreach($surveyPagesArr as $singleRec)		{			$dataArr[] = array(									'user_id' => $userId,									'survey_page_id' => $singleRec			                  );		}				$res = $this->db->insert_batch($this->config->item('su_user_survey_page_map','dbtables'), $dataArr); 		return $res;	}		function insertUser()	{		$checkUserEmail = $this->db->get_where($this->config->item('su_users','dbtables'),array("email"=>trim($this->input->post("email"))));		$checkUserPhone = $this->db->get_where($this->config->item('su_users','dbtables'),array("phone"=>trim($this->input->post("phone"))));		if($checkUserEmail->row())		{			return "email_exist";		}		elseif($checkUserPhone->row())		{			return "phone_exist";		}		else		{			$insertArr = array(								'created_at' => date("Y-m-d H:i:s"),								'updated_at' => date("Y-m-d H:i:s"),								'first_name' =>  trim($this->input->post("first_name")),								'last_name' =>  trim($this->input->post("last_name")),								'email' => trim($this->input->post("email")),								'phone' => trim($this->input->post("phone")),								'password' => MD5(trim($this->input->post("password"))),								'status' => trim($this->input->post("status")),							  );			$result = $this->db->insert($this->config->item('su_users','dbtables'), $insertArr);			$userId =  $this->db->insert_id();			return $userId;		}	}		function getUserData($userId)	{		$getUserQuery = $this->db->get_where($this->config->item('su_users','dbtables'),array("id"=>trim($userId)));		$userData = $getUserQuery->row();		if($userData)		{			$userData->survey_pages = array();			$getUserSurveyPagesQuery = $this->db->get_where($this->config->item('su_user_survey_page_map','dbtables'),array("user_id"=>trim($userId)));			$getUserSurveyPages = $getUserSurveyPagesQuery->result();			if($getUserSurveyPages && count($getUserSurveyPages)>0)			{				foreach($getUserSurveyPages as $rec)				{					$userData->survey_pages[] = $rec->survey_page_id;				}			}		}		return $userData;	}		function updateUserImage($lastId,$fileName)	{		$data = array( 						'photo' => $fileName			   					);		$this->db->where('id',$lastId);		$res = $this->db->update($this->config->item('su_users','dbtables'), $data);		return $res;	}	function updateUser($userId)	{		$checkUserEmailQuery = $this->db->get_where($this->config->item('su_users','dbtables'),array("email"=>trim($this->input->post("email"))));		$checkUserEmail = $checkUserEmailQuery->row();				$checkUserPhoneQuery = $this->db->get_where($this->config->item('su_users','dbtables'),array("phone"=>trim($this->input->post("phone"))));		$checkUserPhone = $checkUserPhoneQuery->row();				if($checkUserEmail && $checkUserEmail->id!=$userId)		{			return "email_exist";		}		elseif($checkUserPhone && $checkUserPhone->id!=$userId)		{			return "phone_exist";		}		else		{			$data = array(							'updated_at' => date("Y-m-d H:i:s"),							'first_name' =>  trim($this->input->post("first_name")),							'last_name' =>  trim($this->input->post("last_name")),							'email' => trim($this->input->post("email")),							'phone' => trim($this->input->post("phone")),							'status' => trim($this->input->post("status")),						);									if($this->input->post("password") && trim($this->input->post("password"))!='')			{				$data['password'] = MD5(trim($this->input->post("password")));			}			$this->db->where('id',$userId);			$res = $this->db->update($this->config->item('su_users','dbtables'), $data);			return $res;		}	}		function changeUserStatus($userId,$status)	{		$data = array( 						'status' => $status		   					);		$this->db->where('id',$userId);		$res = $this->db->update($this->config->item('su_users','dbtables'), $data);		return $res;	}		function deleteUser($userId)	{		$this->db->where('id', $userId);		$res = $this->db->delete($this->config->item('su_users','dbtables')); 		return $res;	}	}?>